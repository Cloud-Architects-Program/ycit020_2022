https://cloud.google.com/console/cloudshell/open?git_repo=https://github.com/GoogleCloudPlatform/python-docs-samples&working_dir=cloud-sql/postgres/sqlalchemy

0) Enable apiVersions

     gcloud services enable compute.googleapis.com sqladmin.googleapis.com \
     container.googleapis.com artifactregistry.googleapis.com cloudbuild.googleapis.com


1) Run the Terraform Script for creating a Custom VPC, Subnet, Cloud NAT, Router

2) Create and Connect to Autopilot cluster 
   
    - gcloud container clusters get-credentials autopilot-cluster-1 --region us-central1 --project course-valavan
 
3) Run the Terraform Script for Creating MySQL server and GCP service Account with Cloud SQL permissions & Workload identity Permissions 

    - Verify the retuned SQL Connection ID , Public / Private IP Address / VPC Services Peering range 

 - gcloud sql databases create quickstart_db --instance=example-mysql-private-9899e424 --project=course-valavan
 - gcloud sql users create quickstart-user1 --instance=example-mysql-private-9899e424 --password=valavan007

4) Clone git repo for application code
      git clone https://github.com/GoogleCloudPlatform/python-docs-samples&working_dir=cloud-sql/postgres/sqlalchemy

5) Create Artifact repo
      gcloud artifacts repositories create gke-cloud-sql-repo \
        --project=course-valavan \
        --repository-format=docker \
        --location=us-central1 \
        --description="GKE Quickstart sample app"

      gcloud auth configure-docker us-central1-docker.pkg.dev

6) Compile the Program to create a docker image
      cd python-docs/cloud-sql/sqlalchemy 

      gcloud builds submit \
      --tag us-central1-docker.pkg.dev/course-valavan/gke-cloud-sql-repo/gke-sql .

      permissions to push to artifact admin 

7) Create secret for DB - hostname, username, password, Service Account 

        kubectl create secret generic gke-cloud-sql-secrets \
          --from-literal=database=quickstart-db \
          --from-literal=username=quickstart-user1 \
          --from-literal=password=valavan007
          - secret/gke-cloud-sql-secrets created

        kubectl create secret generic sql-credentials --from-file=sql_credentials.json=/Users/valavan/Downloads/key.json
          - secret/sql-credentials created

8) Run deployment.yaml and services.yaml files 
            - kubectl apply -f service-account.yaml
            - kubectl apply -f deployment.yaml
            - kubectl apply -f service.yaml

9) Connect to the deploymnet Pod, Connect to sidecar, install mysql and connect to database 